
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TenantScalarFieldEnum = {
  id: 'id',
  subdomain: 'subdomain',
  companyName: 'companyName',
  domain: 'domain',
  isActive: 'isActive',
  subscriptionPlan: 'subscriptionPlan',
  websiteModuleEnabled: 'websiteModuleEnabled',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  paymentAccountHolder: 'paymentAccountHolder',
  paymentBank: 'paymentBank',
  paymentIban: 'paymentIban'
};

exports.Prisma.ModuleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isActive: 'isActive',
  priceMonthly: 'priceMonthly',
  priceYearly: 'priceYearly',
  features: 'features',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TenantModuleScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  moduleId: 'moduleId',
  isEnabled: 'isEnabled',
  activatedAt: 'activatedAt',
  expiresAt: 'expiresAt',
  features: 'features',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TenantUserScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  userId: 'userId',
  role: 'role',
  permissions: 'permissions',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DriverScalarFieldEnum = {
  id: 'id',
  name: 'name',
  phoneNumber: 'phoneNumber',
  tenantId: 'tenantId',
  createdAt: 'createdAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password: 'password',
  name: 'name',
  role: 'role',
  isActive: 'isActive',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserPermissionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  permission: 'permission',
  grantedBy: 'grantedBy',
  grantedAt: 'grantedAt',
  isActive: 'isActive'
};

exports.Prisma.ActivityScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  entityType: 'entityType',
  entityId: 'entityId',
  description: 'description',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt',
  tenantId: 'tenantId'
};

exports.Prisma.ReservationScalarFieldEnum = {
  id: 'id',
  date: 'date',
  time: 'time',
  from: 'from',
  to: 'to',
  flightCode: 'flightCode',
  passengerNames: 'passengerNames',
  luggageCount: 'luggageCount',
  price: 'price',
  currency: 'currency',
  phoneNumber: 'phoneNumber',
  voucherNumber: 'voucherNumber',
  driverFee: 'driverFee',
  driverId: 'driverId',
  paymentStatus: 'paymentStatus',
  createdAt: 'createdAt',
  returnTransferId: 'returnTransferId',
  isReturn: 'isReturn',
  distanceKm: 'distanceKm',
  userId: 'userId',
  tenantId: 'tenantId',
  companyCommissionStatus: 'companyCommissionStatus',
  notes: 'notes',
  email: 'email',
  type: 'type'
};

exports.Prisma.HotelRequestScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  customerName: 'customerName',
  customerEmail: 'customerEmail',
  customerPhone: 'customerPhone',
  checkin: 'checkin',
  checkout: 'checkout',
  adults: 'adults',
  children: 'children',
  rooms: 'rooms',
  city: 'city',
  region: 'region',
  budget: 'budget',
  roomType: 'roomType',
  breakfast: 'breakfast',
  amenities: 'amenities',
  specialRequests: 'specialRequests',
  status: 'status',
  assignedTo: 'assignedTo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HotelBookingScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  requestId: 'requestId',
  reservationId: 'reservationId',
  hotelId: 'hotelId',
  hotelName: 'hotelName',
  hotelAddress: 'hotelAddress',
  roomType: 'roomType',
  checkin: 'checkin',
  checkout: 'checkout',
  adults: 'adults',
  children: 'children',
  rooms: 'rooms',
  totalPrice: 'totalPrice',
  currency: 'currency',
  bookingReference: 'bookingReference',
  status: 'status',
  customerInfo: 'customerInfo',
  specialRequests: 'specialRequests',
  cancellationPolicy: 'cancellationPolicy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  agentPrice: 'agentPrice',
  customerPrice: 'customerPrice',
  profitMargin: 'profitMargin',
  voucherNumber: 'voucherNumber'
};

exports.Prisma.HotelPricePoolScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  hotelId: 'hotelId',
  hotelName: 'hotelName',
  hotelAddress: 'hotelAddress',
  hotelCity: 'hotelCity',
  hotelCountry: 'hotelCountry',
  hotelRating: 'hotelRating',
  hotelStars: 'hotelStars',
  hotelImage: 'hotelImage',
  hotelAmenities: 'hotelAmenities',
  roomType: 'roomType',
  roomName: 'roomName',
  roomDescription: 'roomDescription',
  roomAmenities: 'roomAmenities',
  maxOccupancy: 'maxOccupancy',
  bedType: 'bedType',
  roomSize: 'roomSize',
  roomView: 'roomView',
  basePrice: 'basePrice',
  agentPrice: 'agentPrice',
  customerPrice: 'customerPrice',
  profitMargin: 'profitMargin',
  profitPercentage: 'profitPercentage',
  currency: 'currency',
  validFrom: 'validFrom',
  validTo: 'validTo',
  cancellationPolicy: 'cancellationPolicy',
  breakfastIncluded: 'breakfastIncluded',
  freeCancellation: 'freeCancellation',
  source: 'source',
  lastUpdated: 'lastUpdated',
  updatedBy: 'updatedBy',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VehicleScalarFieldEnum = {
  id: 'id',
  type: 'type',
  capacity: 'capacity',
  licensePlate: 'licensePlate',
  driverName: 'driverName',
  driverPhone: 'driverPhone',
  isAvailable: 'isAvailable',
  lastMaintenance: 'lastMaintenance',
  tenantId: 'tenantId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TourBookingScalarFieldEnum = {
  id: 'id',
  voucherNumber: 'voucherNumber',
  routeName: 'routeName',
  vehicleType: 'vehicleType',
  groupSize: 'groupSize',
  price: 'price',
  currency: 'currency',
  pickupLocation: 'pickupLocation',
  tourDate: 'tourDate',
  tourTime: 'tourTime',
  passengerNames: 'passengerNames',
  notes: 'notes',
  status: 'status',
  tenantId: 'tenantId',
  userId: 'userId',
  driverId: 'driverId',
  driverFee: 'driverFee',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  tourDuration: 'tourDuration'
};

exports.Prisma.TenantWebsiteScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  domain: 'domain',
  subdomain: 'subdomain',
  isActive: 'isActive',
  theme: 'theme',
  customCSS: 'customCSS',
  favicon: 'favicon',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WebsitePageScalarFieldEnum = {
  id: 'id',
  websiteId: 'websiteId',
  slug: 'slug',
  title: 'title',
  content: 'content',
  metaTitle: 'metaTitle',
  metaDescription: 'metaDescription',
  isPublished: 'isPublished',
  isHomepage: 'isHomepage',
  sortOrder: 'sortOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WebsiteSettingsScalarFieldEnum = {
  id: 'id',
  websiteId: 'websiteId',
  companyName: 'companyName',
  logo: 'logo',
  heroTitle: 'heroTitle',
  heroSubtitle: 'heroSubtitle',
  heroImage: 'heroImage',
  contactInfo: 'contactInfo',
  socialMedia: 'socialMedia',
  seoSettings: 'seoSettings',
  colorScheme: 'colorScheme',
  customCSS: 'customCSS',
  analyticsCode: 'analyticsCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WebsiteSectionScalarFieldEnum = {
  id: 'id',
  websiteId: 'websiteId',
  sectionType: 'sectionType',
  title: 'title',
  content: 'content',
  isActive: 'isActive',
  sortOrder: 'sortOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  SUPERUSER: 'SUPERUSER',
  OPERATION: 'OPERATION',
  SELLER: 'SELLER',
  ACCOUNTANT: 'ACCOUNTANT',
  AGENCY_ADMIN: 'AGENCY_ADMIN',
  AGENCY_USER: 'AGENCY_USER'
};

exports.Prisma.ModelName = {
  Tenant: 'Tenant',
  Module: 'Module',
  TenantModule: 'TenantModule',
  TenantUser: 'TenantUser',
  Driver: 'Driver',
  User: 'User',
  UserPermission: 'UserPermission',
  Activity: 'Activity',
  Reservation: 'Reservation',
  HotelRequest: 'HotelRequest',
  HotelBooking: 'HotelBooking',
  HotelPricePool: 'HotelPricePool',
  Vehicle: 'Vehicle',
  TourBooking: 'TourBooking',
  TenantWebsite: 'TenantWebsite',
  WebsitePage: 'WebsitePage',
  WebsiteSettings: 'WebsiteSettings',
  WebsiteSection: 'WebsiteSection'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/hakancineli/crm_transfer/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-3.0.x"
      },
      {
        "fromEnvVar": null,
        "value": "linux-musl-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/hakancineli/crm_transfer/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  binaryTargets = [\"native\", \"rhel-openssl-3.0.x\", \"linux-musl-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Tenant {\n  id                   String           @id @default(uuid())\n  subdomain            String           @unique\n  companyName          String\n  domain               String?\n  isActive             Boolean          @default(true)\n  subscriptionPlan     String           @default(\"basic\")\n  websiteModuleEnabled Boolean          @default(false)\n  createdAt            DateTime         @default(now())\n  updatedAt            DateTime         @updatedAt\n  paymentAccountHolder String?\n  paymentBank          String?\n  paymentIban          String?\n  activities           Activity[]\n  reservations         Reservation[]\n  drivers              Driver[]\n  hotelBookings        HotelBooking[]\n  hotelPricePool       HotelPricePool[]\n  hotelRequests        HotelRequest[]\n  modules              TenantModule[]\n  users                TenantUser[]\n  tourBookings         TourBooking[]\n  vehicles             Vehicle[]\n  websites             TenantWebsite[]\n\n  @@map(\"tenants\")\n}\n\nmodel Module {\n  id            String         @id @default(uuid())\n  name          String         @unique\n  description   String?\n  isActive      Boolean        @default(true)\n  priceMonthly  Float          @default(0)\n  priceYearly   Float          @default(0)\n  features      String         @default(\"[]\")\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  tenantModules TenantModule[]\n\n  @@map(\"modules\")\n}\n\nmodel TenantModule {\n  id          String    @id @default(uuid())\n  tenantId    String\n  moduleId    String\n  isEnabled   Boolean   @default(false)\n  activatedAt DateTime?\n  expiresAt   DateTime?\n  features    String    @default(\"[]\")\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  module      Module    @relation(fields: [moduleId], references: [id], onDelete: Cascade)\n  tenant      Tenant    @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n\n  @@unique([tenantId, moduleId])\n  @@map(\"tenant_modules\")\n}\n\nmodel TenantUser {\n  id          String   @id @default(uuid())\n  tenantId    String\n  userId      String\n  role        String   @default(\"USER\")\n  permissions String   @default(\"[]\")\n  isActive    Boolean  @default(true)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  tenant      Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([tenantId, userId])\n  @@map(\"tenant_users\")\n}\n\nmodel Driver {\n  id           String        @id @default(uuid())\n  name         String\n  phoneNumber  String?\n  tenantId     String?\n  createdAt    DateTime      @default(now())\n  reservations Reservation[]\n  tenant       Tenant?       @relation(fields: [tenantId], references: [id])\n  tourBookings TourBooking[]\n\n  @@map(\"drivers\")\n}\n\nmodel User {\n  id            String           @id @default(uuid())\n  username      String           @unique\n  email         String           @unique\n  password      String\n  name          String\n  role          UserRole         @default(SELLER)\n  isActive      Boolean          @default(true)\n  createdBy     String?\n  createdAt     DateTime         @default(now())\n  updatedAt     DateTime         @updatedAt\n  activities    Activity[]       @relation(\"UserActivities\")\n  reservations  Reservation[]\n  creator       User?            @relation(\"UserCreator\", fields: [createdBy], references: [id])\n  createdUsers  User[]           @relation(\"UserCreator\")\n  permissions   UserPermission[]\n  hotelRequests HotelRequest[]\n  tenantUsers   TenantUser[]\n  tour_bookings TourBooking[]\n}\n\nmodel UserPermission {\n  id         String   @id @default(uuid())\n  userId     String\n  permission String\n  grantedBy  String?\n  grantedAt  DateTime @default(now())\n  isActive   Boolean  @default(true)\n  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Activity {\n  id          String   @id @default(uuid())\n  userId      String\n  action      String\n  entityType  String\n  entityId    String?\n  description String\n  details     Json?\n  ipAddress   String?\n  userAgent   String?\n  createdAt   DateTime @default(now())\n  tenantId    String?\n  tenant      Tenant?  @relation(fields: [tenantId], references: [id])\n  user        User     @relation(\"UserActivities\", fields: [userId], references: [id])\n}\n\nmodel Reservation {\n  id                      String         @id @default(uuid())\n  date                    String\n  time                    String\n  from                    String\n  to                      String\n  flightCode              String\n  passengerNames          String\n  luggageCount            Int\n  price                   Float\n  currency                String\n  phoneNumber             String?\n  voucherNumber           String         @unique\n  driverFee               Float?\n  driverId                String?\n  paymentStatus           String         @default(\"PENDING\")\n  createdAt               DateTime       @default(now())\n  returnTransferId        String?        @unique\n  isReturn                Boolean        @default(false)\n  distanceKm              Float?\n  userId                  String?\n  tenantId                String?\n  companyCommissionStatus String         @default(\"PENDING\")\n  notes                   String?\n  email                   String?\n  type                    String         @default(\"transfer\")\n  driver                  Driver?        @relation(fields: [driverId], references: [id])\n  returnTransfer          Reservation?   @relation(\"ReturnTransfer\", fields: [returnTransferId], references: [id])\n  originalTransfer        Reservation?   @relation(\"ReturnTransfer\")\n  tenant                  Tenant?        @relation(fields: [tenantId], references: [id])\n  user                    User?          @relation(fields: [userId], references: [id])\n  hotelBookings           HotelBooking[]\n}\n\nmodel HotelRequest {\n  id              String         @id @default(uuid())\n  tenantId        String?\n  customerName    String\n  customerEmail   String\n  customerPhone   String\n  checkin         DateTime\n  checkout        DateTime\n  adults          Int\n  children        Int            @default(0)\n  rooms           Int            @default(1)\n  city            String\n  region          String?\n  budget          Float?\n  roomType        String?\n  breakfast       Boolean        @default(false)\n  amenities       String         @default(\"[]\")\n  specialRequests String?\n  status          String         @default(\"PENDING\")\n  assignedTo      String?\n  createdAt       DateTime       @default(now())\n  updatedAt       DateTime       @updatedAt\n  hotelBookings   HotelBooking[]\n  user            User?          @relation(fields: [assignedTo], references: [id])\n  tenant          Tenant?        @relation(fields: [tenantId], references: [id])\n\n  @@map(\"hotel_requests\")\n}\n\nmodel HotelBooking {\n  id                 String        @id @default(uuid())\n  tenantId           String?\n  requestId          String?\n  reservationId      String?\n  hotelId            String\n  hotelName          String\n  hotelAddress       String\n  roomType           String\n  checkin            DateTime\n  checkout           DateTime\n  adults             Int\n  children           Int\n  rooms              Int\n  totalPrice         Float\n  currency           String        @default(\"EUR\")\n  bookingReference   String        @unique\n  status             String        @default(\"CONFIRMED\")\n  customerInfo       Json\n  specialRequests    String?\n  cancellationPolicy String?\n  createdAt          DateTime      @default(now())\n  updatedAt          DateTime      @updatedAt\n  agentPrice         Float\n  customerPrice      Float\n  profitMargin       Float\n  voucherNumber      String        @unique\n  request            HotelRequest? @relation(fields: [requestId], references: [id])\n  reservation        Reservation?  @relation(fields: [reservationId], references: [id])\n  tenant             Tenant?       @relation(fields: [tenantId], references: [id])\n\n  @@map(\"hotel_bookings\")\n}\n\nmodel HotelPricePool {\n  id                 String   @id @default(uuid())\n  tenantId           String\n  hotelId            String\n  hotelName          String\n  hotelAddress       String\n  hotelCity          String\n  hotelCountry       String\n  hotelRating        Float\n  hotelStars         Int\n  hotelImage         String?\n  hotelAmenities     String   @default(\"[]\")\n  roomType           String\n  roomName           String\n  roomDescription    String?\n  roomAmenities      String   @default(\"[]\")\n  maxOccupancy       Int\n  bedType            String\n  roomSize           String?\n  roomView           String?\n  basePrice          Float\n  agentPrice         Float\n  customerPrice      Float\n  profitMargin       Float\n  profitPercentage   Float\n  currency           String   @default(\"EUR\")\n  validFrom          DateTime\n  validTo            DateTime\n  cancellationPolicy String?\n  breakfastIncluded  Boolean  @default(false)\n  freeCancellation   Boolean  @default(false)\n  source             String   @default(\"booking.com\")\n  lastUpdated        DateTime @default(now())\n  updatedBy          String\n  isActive           Boolean  @default(true)\n  createdAt          DateTime @default(now())\n  updatedAt          DateTime @updatedAt\n  tenant             Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n\n  @@index([tenantId, hotelId, validFrom, validTo])\n  @@index([hotelCity, validFrom, validTo])\n  @@index([isActive, validFrom, validTo])\n  @@map(\"hotel_price_pool\")\n}\n\nmodel Vehicle {\n  id              String    @id @default(uuid())\n  type            String\n  capacity        Int\n  licensePlate    String\n  driverName      String?\n  driverPhone     String?\n  isAvailable     Boolean   @default(true)\n  lastMaintenance DateTime?\n  tenantId        String\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n  tenant          Tenant    @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n\n  @@map(\"vehicles\")\n}\n\nmodel TourBooking {\n  id             String   @id @default(uuid())\n  voucherNumber  String   @unique\n  routeName      String\n  vehicleType    String\n  groupSize      Int\n  price          Float\n  currency       String   @default(\"USD\")\n  pickupLocation String\n  tourDate       DateTime\n  tourTime       String?\n  passengerNames String\n  notes          String?\n  status         String   @default(\"PENDING\")\n  tenantId       String\n  userId         String?\n  driverId       String?\n  driverFee      Float?\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n  tourDuration   Int      @default(1)\n  driver         Driver?  @relation(fields: [driverId], references: [id])\n  tenant         Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  User           User?    @relation(fields: [userId], references: [id])\n\n  @@map(\"tour_bookings\")\n}\n\nenum UserRole {\n  SUPERUSER\n  OPERATION\n  SELLER\n  ACCOUNTANT\n  AGENCY_ADMIN\n  AGENCY_USER\n}\n\n// Website Module Models\nmodel TenantWebsite {\n  id        String           @id @default(uuid())\n  tenantId  String\n  domain    String?          @unique\n  subdomain String?          @unique\n  isActive  Boolean          @default(true)\n  theme     String           @default(\"default\")\n  customCSS String?\n  favicon   String?\n  createdAt DateTime         @default(now())\n  updatedAt DateTime         @updatedAt\n  tenant    Tenant           @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  pages     WebsitePage[]\n  settings  WebsiteSettings?\n  sections  WebsiteSection[]\n\n  @@map(\"tenant_websites\")\n}\n\nmodel WebsitePage {\n  id              String        @id @default(uuid())\n  websiteId       String\n  slug            String\n  title           String\n  content         Json\n  metaTitle       String?\n  metaDescription String?\n  isPublished     Boolean       @default(false)\n  isHomepage      Boolean       @default(false)\n  sortOrder       Int           @default(0)\n  createdAt       DateTime      @default(now())\n  updatedAt       DateTime      @updatedAt\n  website         TenantWebsite @relation(fields: [websiteId], references: [id], onDelete: Cascade)\n\n  @@unique([websiteId, slug])\n  @@map(\"website_pages\")\n}\n\nmodel WebsiteSettings {\n  id            String        @id @default(uuid())\n  websiteId     String        @unique\n  companyName   String\n  logo          String?\n  heroTitle     String\n  heroSubtitle  String\n  heroImage     String?\n  contactInfo   Json // {phone, email, address, whatsapp}\n  socialMedia   Json // {facebook, instagram, twitter, linkedin}\n  seoSettings   Json // {title, description, keywords, ogImage}\n  colorScheme   Json // {primary, secondary, accent}\n  customCSS     String?\n  analyticsCode String?\n  createdAt     DateTime      @default(now())\n  updatedAt     DateTime      @updatedAt\n  website       TenantWebsite @relation(fields: [websiteId], references: [id], onDelete: Cascade)\n\n  @@map(\"website_settings\")\n}\n\nmodel WebsiteSection {\n  id          String        @id @default(uuid())\n  websiteId   String\n  sectionType String // hero, features, reviews, faq, contact, etc.\n  title       String?\n  content     Json\n  isActive    Boolean       @default(true)\n  sortOrder   Int           @default(0)\n  createdAt   DateTime      @default(now())\n  updatedAt   DateTime      @updatedAt\n  website     TenantWebsite @relation(fields: [websiteId], references: [id], onDelete: Cascade)\n\n  @@unique([websiteId, sectionType])\n  @@map(\"website_sections\")\n}\n",
  "inlineSchemaHash": "39b79a9222636cad02b81d1a0066110bccd89f86fe3569ab5bb19694c444e849",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Tenant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subdomain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"domain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"subscriptionPlan\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"websiteModuleEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentAccountHolder\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentBank\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentIban\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"Activity\",\"relationName\":\"ActivityToTenant\"},{\"name\":\"reservations\",\"kind\":\"object\",\"type\":\"Reservation\",\"relationName\":\"ReservationToTenant\"},{\"name\":\"drivers\",\"kind\":\"object\",\"type\":\"Driver\",\"relationName\":\"DriverToTenant\"},{\"name\":\"hotelBookings\",\"kind\":\"object\",\"type\":\"HotelBooking\",\"relationName\":\"HotelBookingToTenant\"},{\"name\":\"hotelPricePool\",\"kind\":\"object\",\"type\":\"HotelPricePool\",\"relationName\":\"HotelPricePoolToTenant\"},{\"name\":\"hotelRequests\",\"kind\":\"object\",\"type\":\"HotelRequest\",\"relationName\":\"HotelRequestToTenant\"},{\"name\":\"modules\",\"kind\":\"object\",\"type\":\"TenantModule\",\"relationName\":\"TenantToTenantModule\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"TenantUser\",\"relationName\":\"TenantToTenantUser\"},{\"name\":\"tourBookings\",\"kind\":\"object\",\"type\":\"TourBooking\",\"relationName\":\"TenantToTourBooking\"},{\"name\":\"vehicles\",\"kind\":\"object\",\"type\":\"Vehicle\",\"relationName\":\"TenantToVehicle\"},{\"name\":\"websites\",\"kind\":\"object\",\"type\":\"TenantWebsite\",\"relationName\":\"TenantToTenantWebsite\"}],\"dbName\":\"tenants\"},\"Module\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"priceMonthly\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"priceYearly\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenantModules\",\"kind\":\"object\",\"type\":\"TenantModule\",\"relationName\":\"ModuleToTenantModule\"}],\"dbName\":\"modules\"},\"TenantModule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"moduleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"activatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"module\",\"kind\":\"object\",\"type\":\"Module\",\"relationName\":\"ModuleToTenantModule\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToTenantModule\"}],\"dbName\":\"tenant_modules\"},\"TenantUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToTenantUser\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TenantUserToUser\"}],\"dbName\":\"tenant_users\"},\"Driver\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reservations\",\"kind\":\"object\",\"type\":\"Reservation\",\"relationName\":\"DriverToReservation\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"DriverToTenant\"},{\"name\":\"tourBookings\",\"kind\":\"object\",\"type\":\"TourBooking\",\"relationName\":\"DriverToTourBooking\"}],\"dbName\":\"drivers\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"Activity\",\"relationName\":\"UserActivities\"},{\"name\":\"reservations\",\"kind\":\"object\",\"type\":\"Reservation\",\"relationName\":\"ReservationToUser\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserCreator\"},{\"name\":\"createdUsers\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserCreator\"},{\"name\":\"permissions\",\"kind\":\"object\",\"type\":\"UserPermission\",\"relationName\":\"UserToUserPermission\"},{\"name\":\"hotelRequests\",\"kind\":\"object\",\"type\":\"HotelRequest\",\"relationName\":\"HotelRequestToUser\"},{\"name\":\"tenantUsers\",\"kind\":\"object\",\"type\":\"TenantUser\",\"relationName\":\"TenantUserToUser\"},{\"name\":\"tour_bookings\",\"kind\":\"object\",\"type\":\"TourBooking\",\"relationName\":\"TourBookingToUser\"}],\"dbName\":null},\"UserPermission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permission\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grantedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grantedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserPermission\"}],\"dbName\":null},\"Activity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"ActivityToTenant\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserActivities\"}],\"dbName\":null},\"Reservation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"from\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"to\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flightCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passengerNames\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"luggageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voucherNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driverFee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"driverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"returnTransferId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isReturn\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"distanceKm\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyCommissionStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driver\",\"kind\":\"object\",\"type\":\"Driver\",\"relationName\":\"DriverToReservation\"},{\"name\":\"returnTransfer\",\"kind\":\"object\",\"type\":\"Reservation\",\"relationName\":\"ReturnTransfer\"},{\"name\":\"originalTransfer\",\"kind\":\"object\",\"type\":\"Reservation\",\"relationName\":\"ReturnTransfer\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"ReservationToTenant\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReservationToUser\"},{\"name\":\"hotelBookings\",\"kind\":\"object\",\"type\":\"HotelBooking\",\"relationName\":\"HotelBookingToReservation\"}],\"dbName\":null},\"HotelRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checkin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"checkout\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"adults\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"children\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rooms\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"budget\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"roomType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"breakfast\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"amenities\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specialRequests\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedTo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"hotelBookings\",\"kind\":\"object\",\"type\":\"HotelBooking\",\"relationName\":\"HotelBookingToHotelRequest\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"HotelRequestToUser\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"HotelRequestToTenant\"}],\"dbName\":\"hotel_requests\"},\"HotelBooking\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reservationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hotelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hotelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hotelAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checkin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"checkout\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"adults\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"children\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rooms\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingReference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"specialRequests\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cancellationPolicy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"agentPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"customerPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"profitMargin\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"voucherNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"request\",\"kind\":\"object\",\"type\":\"HotelRequest\",\"relationName\":\"HotelBookingToHotelRequest\"},{\"name\":\"reservation\",\"kind\":\"object\",\"type\":\"Reservation\",\"relationName\":\"HotelBookingToReservation\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"HotelBookingToTenant\"}],\"dbName\":\"hotel_bookings\"},\"HotelPricePool\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hotelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hotelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hotelAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hotelCity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hotelCountry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hotelRating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"hotelStars\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hotelImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hotelAmenities\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomAmenities\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxOccupancy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bedType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomSize\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomView\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"basePrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"agentPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"customerPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"profitMargin\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"profitPercentage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"validFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"validTo\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancellationPolicy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"breakfastIncluded\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"freeCancellation\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastUpdated\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"HotelPricePoolToTenant\"}],\"dbName\":\"hotel_price_pool\"},\"Vehicle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"licensePlate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driverName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driverPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastMaintenance\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToVehicle\"}],\"dbName\":\"vehicles\"},\"TourBooking\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voucherNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"routeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicleType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"groupSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pickupLocation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tourDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tourTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passengerNames\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driverFee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tourDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"driver\",\"kind\":\"object\",\"type\":\"Driver\",\"relationName\":\"DriverToTourBooking\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToTourBooking\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TourBookingToUser\"}],\"dbName\":\"tour_bookings\"},\"TenantWebsite\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"domain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subdomain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"theme\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customCSS\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"favicon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToTenantWebsite\"},{\"name\":\"pages\",\"kind\":\"object\",\"type\":\"WebsitePage\",\"relationName\":\"TenantWebsiteToWebsitePage\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"WebsiteSettings\",\"relationName\":\"TenantWebsiteToWebsiteSettings\"},{\"name\":\"sections\",\"kind\":\"object\",\"type\":\"WebsiteSection\",\"relationName\":\"TenantWebsiteToWebsiteSection\"}],\"dbName\":\"tenant_websites\"},\"WebsitePage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"websiteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"metaTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metaDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isHomepage\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"website\",\"kind\":\"object\",\"type\":\"TenantWebsite\",\"relationName\":\"TenantWebsiteToWebsitePage\"}],\"dbName\":\"website_pages\"},\"WebsiteSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"websiteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"heroTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"heroSubtitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"heroImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"socialMedia\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"seoSettings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"colorScheme\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"customCSS\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"analyticsCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"website\",\"kind\":\"object\",\"type\":\"TenantWebsite\",\"relationName\":\"TenantWebsiteToWebsiteSettings\"}],\"dbName\":\"website_settings\"},\"WebsiteSection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"websiteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sectionType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"website\",\"kind\":\"object\",\"type\":\"TenantWebsite\",\"relationName\":\"TenantWebsiteToWebsiteSection\"}],\"dbName\":\"website_sections\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

